{"version":3,"sources":["/Users/josemunoz/Documents/react-spring-universal-examples/src/components/Overlay/Overlay.js","/Users/josemunoz/Documents/react-spring-universal-examples/src/components/Router/Router.web.js","/Users/josemunoz/Documents/react-spring-universal-examples/src/Screens/Home/Home.js","/Users/josemunoz/Documents/react-spring-universal-examples/src/Screens/ScriptBox/ScriptBox.js","/Users/josemunoz/Documents/react-spring-universal-examples/src/utils.js","/Users/josemunoz/Documents/react-spring-universal-examples/src/Screens/FlipImage/FlipImage.js","/Users/josemunoz/Documents/react-spring-universal-examples/src/components/Knob/Knob.js","/Users/josemunoz/Documents/react-spring-universal-examples/src/components/Container/Container.js","/Users/josemunoz/Documents/react-spring-universal-examples/src/Screens/PullRelease/PullRelease.js","/Users/josemunoz/Documents/react-spring-universal-examples/src/Screens/MasonryGrid/data.js","/Users/josemunoz/Documents/react-spring-universal-examples/src/Screens/MasonryGrid/MasonryGrid.js","/Users/josemunoz/Documents/react-spring-universal-examples/src/components/SvgImage/SvgImage.web.js","/Users/josemunoz/Documents/react-spring-universal-examples/src/Screens/TouchParallax/TouchParallax.js","/Users/josemunoz/Documents/react-spring-universal-examples/src/Screens/GestureSlider/GestureSlider.js","/Users/josemunoz/Documents/react-spring-universal-examples/src/Screens/DraggableList/data.js","/Users/josemunoz/Documents/react-spring-universal-examples/src/Screens/DraggableList/ListItem.js","/Users/josemunoz/Documents/react-spring-universal-examples/src/Screens/DraggableList/DraggableList.js","/Users/josemunoz/Documents/react-spring-universal-examples/src/Screens/AnimatingAuto/AnimatingAuto.js","/Users/josemunoz/Documents/react-spring-universal-examples/src/components/Box/Box.js","/Users/josemunoz/Documents/react-spring-universal-examples/src/Screens/ScriptedAnimation/ScriptedAnimation.js","/Users/josemunoz/Documents/react-spring-universal-examples/src/components/Back/Back.js","/Users/josemunoz/Documents/react-spring-universal-examples/src/App/App.js","/Users/josemunoz/Documents/react-spring-universal-examples/App.js","/Users/josemunoz/Documents/react-spring-universal-examples/web-build/register-service-worker.js"],"names":["slideIn","opacity","slideOut","AnimatedView","animated","View","AnimatedModal","Modal","fastAnimation","config","default","friction","tension","forwardRef","ref","children","onCloseRequest","useState","isVisible","setVisible","transition","useTransition","unique","from","enter","leave","useImperativeHandle","open","close","toggle","prevState","dismiss","map","item","key","props","transparent","hardwareAccelerated","style","onRequestClose","TouchableWithoutFeedback","onPress","flex","width","height","position","backgroundColor","Link","textDecoration","BackButton","React","Fragment","Row","styled","TouchableOpacity","Label","Text","links","label","route","Home","bottomSheet","useRef","FlatList","data","contentContainerStyle","flexGrow","keyExtractor","renderItem","to","as","name","color","size","ScriptBox","animation","useSpring","top","left","next","a","async","percent","percentage","value","useMedia","queries","values","defaultValue","Dimensions","get","match","findIndex","query","matchMedia","matches","set","useEffect","Image","AnimatedImage","initialState","rotateX","flipedState","FlipImage","fivePercent","eightyPercent","shouldFlip","setFlip","mass","TouchableHighlight","interpolate","transform","perspective","source","uri","Knob","Container","translateX","translateY","PullRelease","onGestureEvent","nativeEvent","translationX","translationY","onHandlerStateChange","state","State","ACTIVE","wobbly","elevation","fontSize","fontWeight","id","hat","ninetyPercent","Wrapper","memo","MasonryGrid","items","columns","interval","setInterval","shuffle","clearInterval","heights","Array","fill","grid","child","column","indexOf","Math","min","transitions","update","trail","rest","src","images","sixtyPercent","fortyPercent","thirtyPercent","twentyPercent","TouchParallax","itemSize","productOf","backgroundSize","AnimatedGradient","LinearGradient","Dot","Handle","PinkRed","YellowGreen","scale","immediate","GestureSlider","adjustedWidth","start","locations","end","borderRadius","overflow","justifyContent","colors","alignSelf","abs","range","output","extrapolate","gradient","Gradient","ListItem","onGesture","reset","screen","onPressIn","onPressOut","func","active","order","curIndex","originalIndex","index","zIndex","shadow","DraggableList","_","i","useSprings","length","current","springs","alignItems","curRow","clamp","round","newOrder","swap","Box","calculateTranslation","interpolation","sin","PI","ScriptedAnimation","boxWidth","radians","duration","Back","useLocation","pathname","replace","bottom","display","shadowColor","shadowRadius","shadowOpacity","shadowOffset","App","SafeAreaView","exact","path","component","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","console"],"mappings":"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","file":"static/js/app.a6619c39.chunk.js","sourcesContent":["import { Modal, TouchableWithoutFeedback, View } from \"react-native\";\nimport { useTransition, animated, config } from \"react-spring/native\";\nimport React, { useState, useImperativeHandle, forwardRef } from \"react\";\n\nconst slideIn = { opacity: 1 };\nconst slideOut = { opacity: 0 };\nconst AnimatedView = animated(View);\nconst AnimatedModal = animated(Modal);\nconst fastAnimation = { ...config.default, friction: 18, tension: 175 };\n\nconst Overlay = ({ children, onCloseRequest }, ref) => {\n  const [isVisible, setVisible] = useState(false);\n  const transition = useTransition(isVisible, null, {\n    unique: true,\n    from: slideOut,\n    enter: slideIn,\n    leave: slideOut,\n    config: fastAnimation\n  });\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      open: () => setVisible(true),\n      close: () => setVisible(false),\n      toggle: () => setVisible(prevState => !prevState)\n    }),\n    []\n  );\n\n  const dismiss = () => {\n    setVisible(false);\n    onCloseRequest?.();\n  };\n\n  return transition.map(\n    ({ item, key, props: { opacity } }) =>\n      item && (\n        <AnimatedModal\n          key={key}\n          transparent\n          hardwareAccelerated\n          style={{ opacity }}\n          onRequestClose={dismiss}\n        >\n          <TouchableWithoutFeedback onPress={dismiss}>\n            <AnimatedView\n              style={{\n                flex: 1,\n                opacity,\n                width: \"100%\",\n                height: \"100%\",\n                position: \"absolute\",\n                backgroundColor: \"#8884\"\n              }}\n            />\n          </TouchableWithoutFeedback>\n          <AnimatedView style={{ opacity }}>\n            {children}\n          </AnimatedView>\n        </AnimatedModal>\n      )\n  );\n};\n\nexport default forwardRef(Overlay);\n","import React from \"react\";\nimport { Link as Lonk } from \"react-router-dom\";\n\nexport const Link = ({ style, ...props }) => (\n  <Lonk style={{ ...style, textDecoration: \"none\" }} {...props} />\n);\nexport const BackButton = React.Fragment;\nexport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  useLocation,\n  useHistory,\n  useParams\n} from \"react-router-dom\";\n","import React, { useRef } from \"react\";\nimport { FlatList, View } from \"react-native\";\nimport styled from \"styled-components/native\";\nimport { AntDesign as Icon } from \"@expo/vector-icons\";\n\nimport ActionSheet from \"../../components/Overlay\";\nimport { Link } from \"../../components/Router\";\n\nconst Row = styled.TouchableOpacity`\n  height: 60px;\n  border-radius: 5px;\n  margin: 5px 10px;\n  padding: 0 5px;\n  flex-direction: row;\n  align-self: stretch;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Label = styled.Text`\n  color: #888;\n  font-size: 18px;\n  font-weight: 400;\n`;\n\nconst links = [\n  {\n    label: \"Automatic Scripted Animation\",\n    route: \"ScriptBox\"\n  },\n  {\n    label: \"Image Flip\",\n    route: \"FlipImage\"\n  },\n  {\n    label: \"Slider Animation\",\n    route: \"GestureSlider\"\n  },\n  {\n    label: \"Masonry Grid\",\n    route: \"MasonryGrid\"\n  },\n  {\n    label: \"Spring Pull\",\n    route: \"PullRelease\"\n  },\n  {\n    label: \"Automatic Scripted Boxes Animation\",\n    route: \"ScriptedAnimation\"\n  },\n  {\n    label: \"Parallax Animation (rotation iOS only)\",\n    route: \"TouchParallax\"\n  }\n];\n\nconst Home = () => {\n  const bottomSheet = useRef();\n\n  return (\n    <>\n      <FlatList\n        data={links}\n        contentContainerStyle={{ flexGrow: 1 }}\n        keyExtractor={item => `animation-link-${item.route}`}\n        // ListHeaderComponent={\n        //   <Row\n        //     onPress={() => {\n        //       bottomSheet.current?.open();\n        //     }}\n        //   >\n        //     <>\n        //       <Label>Animated ActionSheet</Label>\n        //       <Icon name=\"arrowright\" color=\"#888\" size={18} />\n        //     </>\n        //   </Row>\n        // }\n        renderItem={({ item }) => (\n          <Link to={item.route}>\n            <Row as={View}>\n              <Label>{item.label}</Label>\n              <Icon name=\"arrowright\" color=\"#888\" size={18} />\n            </Row>\n          </Link>\n        )}\n      />\n      <ActionSheet ref={bottomSheet}>\n        <Label>Hello Vancouver!</Label>\n      </ActionSheet>\n    </>\n  );\n};\n\nexport default Home;\n","import React from 'react'\nimport { View } from 'react-native'\nimport { animated, useSpring } from 'react-spring'\n\nconst AnimatedView = animated(View)\nconst ScriptBox = () => {\n  const animation = useSpring({\n    from: { top: '50%', left: '0%', width: '0%', height: '0%', backgroundColor: 'lightgreen', position: 'relative' },\n    to: async next => {\n      while (1) {\n        await next({ width: '80%', height: '80%', top: '10%', left: '10%', backgroundColor: 'lightblue' })\n        await next({ top: '0%', left: '50%', height: '40%', width: '50%', backgroundColor: 'lightgreen' })        \n        await next({ top: '0%', height: '100%', backgroundColor: 'lightgoldenrodyellow' })\n        await next({ top: '60%', height: '40%', backgroundColor: 'lightpink' })\n        await next({ width: '100%', left: '0%', backgroundColor: 'lightsalmon' })\n        await next({ width: '50%', backgroundColor: 'lightcoral' })\n        await next({ top: '0%', height: '100%', backgroundColor: 'lightseagreen' })\n        await next({ height: '40%', backgroundColor: 'lightskyblue' })\n        await next({ left: '0%', top: '0%', width: '100%', height: '100%', backgroundColor: 'lightslategrey' })\n      }\n    },\n  })\n\n  return <AnimatedView style={animation} />\n}\n\nexport default ScriptBox\n","import '@expo/match-media'\nimport { Dimensions } from 'react-native'\nimport { useState, useEffect } from 'react'\nimport { DeviceMotion } from 'expo-sensors'\n\nexport const percent = percentage => value => value * (percentage / 100)\nexport const useMedia = (queries, values, defaultValue) => {\n  const { width } = Dimensions.get('window')\n  const match = () => values[queries.findIndex(query => matchMedia(query).matches)] || defaultValue\n  const [value, set] = useState(match)\n\n  useEffect(() => {\n    set(match())\n  }, [width])\n\n  return value\n}\n\nexport const useDeviceMotion = () => {\n  const [motionInfo, set] = useState({ x: 0, y: 0, z: 0 })\n\n  useEffect(() => {\n    DeviceMotion.setUpdateInterval(500)\n    const subscription = DeviceMotion.addListener(rotation => set(rotation))\n    return () => DeviceMotion.removeSubscription(subscription)\n  }, [])\n\n  return motionInfo\n}\n","import React, { useState } from \"react\";\nimport styled from \"styled-components/native\";\nimport { useSpring, animated } from \"react-spring/native\";\nimport { TouchableHighlight, Dimensions, View } from \"react-native\";\n\nimport { percent } from \"../../utils\";\n\nconst Image = styled.Image`\n  align-self: center;\n  position: absolute;\n`;\n\nconst AnimatedImage = animated(Image);\nconst initialState = { opacity: 1, rotateX: 180 };\nconst flipedState = { opacity: 0, rotateX: 0 };\n\nconst FlipImage = () => {\n  const fivePercent = percent(5);\n  const eightyPercent = percent(80);\n  const { height, width } = Dimensions.get(\"window\");\n  const [shouldFlip, setFlip] = useState(false);\n  const { opacity, rotateX } = useSpring({\n    ...(shouldFlip ? flipedState : initialState),\n    config: { mass: 5, tension: 500, friction: 80 }\n  });\n\n  return (\n    <View>\n      <TouchableHighlight onPress={() => setFlip(!shouldFlip)}>\n        <View>\n          <AnimatedImage\n            style={{\n              top: fivePercent(height),\n              width: eightyPercent(width),\n              height: eightyPercent(height),\n              opacity: opacity.interpolate(value => 1 - value),\n              transform: [\n                { perspective: 600 },\n                { rotateX: rotateX.interpolate(value => `${value}deg`) }\n              ]\n            }}\n            source={{\n              uri:\n                \"https://images.unsplash.com/photo-1544511916-0148ccdeb877?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&w=1901&q=80i&auto=format&fit=crop\"\n            }}\n          />\n          <AnimatedImage\n            style={{\n              opacity,\n              top: fivePercent(height),\n              width: eightyPercent(width),\n              height: eightyPercent(height),\n              transform: [\n                { perspective: 600 },\n                { rotateX: rotateX.interpolate(value => `${value}deg`) }\n              ]\n            }}\n            source={{\n              uri:\n                \"https://images.unsplash.com/photo-1540206395-68808572332f?ixlib=rb-1.2.1&w=1181&q=80&auto=format&fit=crop\"\n            }}\n          />\n        </View>\n      </TouchableHighlight>\n    </View>\n  );\n};\n\nexport default FlipImage;\n","import styled from 'styled-components/native'\n\nconst Knob = styled.View`\n  border-radius: 50px;\n  height: 100px;\n  width: 100px;\n  justify-content: center;\n  align-items: center;\n  box-shadow: 0 1px 1px #888;\n  background-color: hotpink;\n`\n\nexport default Knob\n","import styled from 'styled-components/native'\n\nconst Container = styled.View`\n  flex: 1;\n  align-items: center;\n  flex-direction: column;\n  justify-content: center;\n`\n\nexport default Container\n","import React from \"react\";\nimport { View, Text } from \"react-native\";\nimport { useSpring, animated, config } from \"react-spring/native\";\nimport { PanGestureHandler, State } from \"react-native-gesture-handler\";\n\nimport Knob from \"../../components/Knob\";\nimport Container from \"../../components/Container\";\n\nconst AnimatedView = animated(View);\nconst initialState = { translateX: 0, translateY: 0 };\nconst PullRelease = () => {\n  const [{ translateX, translateY }, set] = useSpring(() => ({\n    from: initialState\n  }));\n\n  return (\n    <Container>\n      <PanGestureHandler\n        onGestureEvent={({ nativeEvent: { translationX, translationY } }) => {\n          set({\n            to: {\n              translateX: translationX,\n              translateY: translationY\n            },\n            config: config.default\n          });\n        }}\n        onHandlerStateChange={({ nativeEvent: { state } }) => {\n          if (state !== State.ACTIVE)\n            set({ to: initialState, config: config.wobbly });\n        }}\n      >\n        <View>\n          <AnimatedView\n            style={{\n              elevation: 1,\n              transform: [{ translateX }, { translateY }]\n            }}\n          >\n            <Knob>\n              <Text style={{ color: \"#FFF\", fontSize: 18, fontWeight: \"700\" }}>\n                PULL\n              </Text>\n            </Knob>\n          </AnimatedView>\n        </View>\n      </PanGestureHandler>\n    </Container>\n  );\n};\n\nexport default PullRelease;\n","import hat from 'hat'\n\nexport default [\n  {\n    uri:\n      'https://images.pexels.com/photos/416430/pexels-photo-416430.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260',\n    height: 150,\n    id: hat(),\n  },\n  {\n    uri:\n      'https://images.pexels.com/photos/1103970/pexels-photo-1103970.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260',\n    height: 300,\n    id: hat(),\n  },\n  {\n    uri:\n      'https://images.pexels.com/photos/911738/pexels-photo-911738.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260',\n    height: 300,\n    id: hat(),\n  },\n  {\n    uri:\n      'https://images.pexels.com/photos/358574/pexels-photo-358574.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260',\n    height: 300,\n    id: hat(),\n  },\n  {\n    uri:\n      'https://images.pexels.com/photos/1738986/pexels-photo-1738986.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260',\n    height: 300,\n    id: hat(),\n  },\n  {\n    uri:\n      'https://images.pexels.com/photos/96381/pexels-photo-96381.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260',\n    height: 300,\n    id: hat(),\n  },\n  {\n    uri:\n      'https://images.pexels.com/photos/1005644/pexels-photo-1005644.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260',\n    height: 200,\n    id: hat(),\n  },\n  {\n    uri:\n      'https://images.pexels.com/photos/227675/pexels-photo-227675.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260',\n    height: 300,\n    id: hat(),\n  },\n  {\n    uri:\n      'https://images.pexels.com/photos/325185/pexels-photo-325185.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260',\n    height: 200,\n    id: hat(),\n  },\n  {\n    uri:\n      'https://images.pexels.com/photos/327482/pexels-photo-327482.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260',\n    height: 400,\n    id: hat(),\n  },\n  {\n    uri:\n      'https://images.pexels.com/photos/988872/pexels-photo-988872.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260',\n    height: 200,\n    id: hat(),\n  },\n  {\n    uri:\n      'https://images.pexels.com/photos/249074/pexels-photo-249074.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260',\n    height: 150,\n    id: hat(),\n  },\n  {\n    uri:\n      'https://images.pexels.com/photos/310452/pexels-photo-310452.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260',\n    height: 400,\n    id: hat(),\n  },\n  {\n    uri:\n      'https://images.pexels.com/photos/380337/pexels-photo-380337.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260',\n    height: 200,\n    id: hat(),\n  }\n]\n","import { shuffle } from \"lodash\";\nimport styled from \"styled-components/native\";\nimport React, { useState, useEffect } from \"react\";\nimport { Dimensions, View } from \"react-native\";\nimport { animated, useTransition } from \"react-spring/native\";\n\nimport data from \"./data\";\nimport { percent, useMedia } from \"../../utils\";\n\nconst ninetyPercent = percent(90);\nconst AnimatedView = animated(View);\nconst Wrapper = styled.View`\n  flex: 1;\n  padding: 0;\n  width: 100%;\n  position: relative;\n  align-items: flex-start;\n  justify-content: flex-start;\n  height: ${({ height }) => height || \"100%\"};\n`;\n\nconst Image = React.memo(styled.Image`\n  margin: 5px;\n  width: 100%;\n  height: 100%;\n  border-radius: 5px;\n  position: relative;\n  box-shadow: 0px 1px 2px #0004;\n`)\n\nconst MasonryGrid = () => {\n  const [items, set] = useState(data);\n  const { width } = Dimensions.get(\"window\");\n  const columns = useMedia(\n    [\"(min-width: 1500px)\", \"(min-width: 1000px)\", \"(min-width: 600px)\"],\n    [5, 4, 3],\n    3\n  );\n\n  useEffect(() => {\n    const interval = setInterval(() => set(shuffle), 1500);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const heights = new Array(columns).fill(0);\n  const grid = items.map(child => {\n    const column = heights.indexOf(Math.min(...heights));\n    const translateX = (width / columns) * column;\n    const translateY =\n      (heights[column] += child.height / 2) - child.height / 2;\n\n    return {\n      ...child,\n      translateY,\n      translateX,\n      width: ninetyPercent(width / columns),\n      height: ninetyPercent(child.height / 2)\n    };\n  });\n\n  const transitions = useTransition(grid, item => item.id, {\n    from: ({ translateX, translateY, width, height }) => ({\n      width,\n      height,\n      opacity: 0,\n      translateY,\n      translateX\n    }),\n    enter: ({ translateX, translateY, width, height }) => ({\n      width,\n      height,\n      opacity: 1,\n      translateX,\n      translateY\n    }),\n    update: ({ translateX, translateY, width, height }) => ({\n      width,\n      height,\n      translateX,\n      translateY\n    }),\n    trail: 25,\n    leave: { height: 0, opacity: 0 },\n    config: { mass: 5, tension: 500, friction: 100 }\n  });\n\n  return (\n    <Wrapper>\n      {transitions.map(\n        ({ key, item, props: { translateX, translateY, ...rest } }) =>\n          item && (\n            <AnimatedView\n              key={key}\n              style={{\n                ...rest,\n                elevation: 1,\n                position: \"absolute\",\n                transform: [{ translateX }, { translateY }]\n              }}\n            >\n              <Image source={{ uri: item.uri }}/>\n            </AnimatedView>\n          )\n      )}\n    </Wrapper>\n  );\n};\n\nexport default MasonryGrid;\n","import React from 'react'\n\nexport default ({ uri, ...props }) => <img src={uri} {...props} />\n","import React from \"react\";\nimport { View, Dimensions } from \"react-native\";\nimport { animated, useSpring } from \"react-spring\";\nimport { PanGestureHandler, State } from \"react-native-gesture-handler\";\n\nimport { percent, useMedia } from \"../../utils\";\nimport SvgCssUri from '../../components/SvgImage';\nimport Container from \"../../components/Container\";\n\nconst AnimatedImage = animated(View);\nconst initialState = { translateX: 0, translateY: 0 };\n\nconst images = [\n  \"https://image.flaticon.com/icons/svg/119/119596.svg\",\n  \"https://image.flaticon.com/icons/svg/789/789395.svg\",\n  \"https://image.flaticon.com/icons/svg/414/414927.svg\",\n  \"https://image.flaticon.com/icons/svg/789/789392.svg\"\n];\n\nconst ninetyPercent = percent(90);\nconst sixtyPercent = percent(60);\nconst fortyPercent = percent(40);\nconst thirtyPercent = percent(30);\nconst twentyPercent = percent(20);\n\nconst TouchParallax = () => {\n  const { width } = Dimensions.get(\"window\");\n  const itemSize = useMedia(\n    [\"(min-width: 1500px)\", \"(min-width: 1000px)\", \"(min-width: 600px)\"],\n    [twentyPercent, thirtyPercent, fortyPercent].map(productOf =>\n      productOf(width)\n    ),\n    fortyPercent(width)\n  );\n  const backgroundSize = useMedia(\n    [\"(min-width: 1500px)\", \"(min-width: 1000px)\", \"(min-width: 600px)\"],\n    [fortyPercent, sixtyPercent, ninetyPercent].map(productOf =>\n      productOf(width)\n    ),\n    ninetyPercent(width)\n  );\n  const [{ translateX, translateY }, set] = useSpring(() => ({\n    from: initialState,\n    config: { mass: 10, tension: 120, friction: 60 }\n  }));\n\n  return (\n      <PanGestureHandler\n        onGestureEvent={({ nativeEvent: { translationX, translationY } }) => {\n          set({\n            translateX: translationX * 1.5,\n            translateY: translationY * 1.5\n          });\n        }}\n        onHandlerStateChange={({ nativeEvent: { state } }) => {\n          if (state !== State.ACTIVE) set(initialState);\n        }}\n      >\n        <Container position=\"relative\">\n          <AnimatedImage\n            style={{\n              position: \"absolute\",\n              height: backgroundSize,\n              width: backgroundSize,\n              transform: [\n                { translateX: translateX.interpolate(value => value / 10) },\n                { translateY: translateY.interpolate(value => value / 10) }\n              ]\n            }}\n          >\n            <SvgCssUri\n              width=\"100%\"\n              height=\"100%\"\n              uri={images[0]}\n              position=\"relative\"\n            />\n          </AnimatedImage>\n          <AnimatedImage\n            style={{\n              position: \"absolute\",\n              height: itemSize,\n              width: itemSize,\n              transform: [\n                { translateX: translateX.interpolate(value => value / 8 + 45) },\n                { translateY: translateY.interpolate(value => value / 8 - 140) }\n              ]\n            }}\n          >\n            <SvgCssUri\n              width=\"100%\"\n              height=\"100%\"\n              uri={images[1]}\n              position=\"relative\"\n            />\n          </AnimatedImage>\n          <AnimatedImage\n            style={{\n              opacity: 0.9,\n              position: \"absolute\",\n              height: itemSize,\n              width: itemSize,\n              transform: [\n                {\n                  translateX: translateX.interpolate(value => value / 6 - 100)\n                },\n                { translateY: translateY.interpolate(value => value / 6 - 130) }\n              ]\n            }}\n          >\n            <SvgCssUri\n              width=\"100%\"\n              height=\"100%\"\n              uri={images[2]}\n              position=\"relative\"\n            />\n          </AnimatedImage>\n          <AnimatedImage\n            style={{\n              position: \"absolute\",\n              height: itemSize,\n              width: itemSize,\n              transform: [\n                { translateX: translateX.interpolate(value => value / 5) },\n                { translateY: translateY.interpolate(value => value / 5) }\n              ]\n            }}\n          >\n            <SvgCssUri\n              width=\"100%\"\n              height=\"100%\"\n              uri={images[3]}\n              position=\"relative\"\n            />\n          </AnimatedImage>\n        </Container>\n      </PanGestureHandler>\n  );\n};\n\nexport default TouchParallax;\n","import React from \"react\";\nimport styled from \"styled-components/native\";\nimport { View, Text, Dimensions } from \"react-native\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { useSpring, animated } from \"react-spring/native\";\nimport { PanGestureHandler, State } from \"react-native-gesture-handler\";\n\nimport { useMedia, percent } from '../../utils';\nimport Container from \"../../components/Container\";\n\nconst AnimatedView = animated(View);\nconst AnimatedGradient = animated(LinearGradient);\nconst Dot = styled.View`\n  width: 40px;\n  height: 40px;\n  margin: 0 10px;\n  border-radius: 20px;\n  background-color: #FFF;\n`;\n\nconst Handle = styled.View`\n  width: 100%;\n  height: 100%;\n  border-radius: 5px;\n  position: absolute;\n  align-items: center;\n  justify-content: center;\n  background-color: #272727;\n`;\n\nconst Wrapper = styled.View`\n  border-radius: 5px;\n  height: ${({ height }) => height || '100px'};\n  width: ${({ width }) => width || '80%'};\n`;\n\nconst PinkRed = [\"#F093FB\", \"#F5576C\"];\nconst YellowGreen = [\"#96FBC4\", \"#F9F586\"];\nconst initialState = {\n  scale: 1,\n  translateX: 0,\n  immediate: false\n};\n\nconst GestureSlider = () => {  \n  const adjustedWidth = useMedia([\"(min-width: 1500px)\", \"(min-width: 1000px)\", \"(min-width: 600px)\"], ['30%', '50%', '80%'], '80%')\n  const [{ scale, translateX }, set] = useSpring(() => initialState);\n\n  return (\n    <Container>\n      <PanGestureHandler\n        onGestureEvent={({ nativeEvent: { translationX } }) => {\n          set({\n            scale: 1.1,\n            immediate: true,\n            translateX: translationX\n          });\n        }}\n        onHandlerStateChange={({ nativeEvent: { state } }) => {\n          if (state !== State.ACTIVE) set(initialState);\n        }}\n      >\n        <Wrapper width={adjustedWidth}>\n          <AnimatedGradient\n            start={[0, 0]}\n            locations={[0, 1]}\n            end={[-0.5, 0.866]}\n            style={{\n              height: 80,\n              borderRadius: 5,\n              overflow: 'visible',\n              position: \"relative\",\n              justifyContent: \"center\"\n            }}\n            colors={translateX.interpolate(value =>\n              value > 0 ? YellowGreen : PinkRed\n            )}\n          >\n            <Dot\n              as={AnimatedView}\n              style={{\n                alignSelf: translateX.interpolate(value =>\n                  value < 0 ? \"flex-end\" : \"flex-start\"\n                ),\n                transform: [\n                  {\n                    scale: translateX.interpolate({\n                      map: Math.abs,\n                      range: [50, 300],\n                      output: [0.5, 1],\n                      extrapolate: \"clamp\"\n                    })\n                  }\n                ]\n              }}\n            />\n            <Handle\n              as={AnimatedView}\n              style={{\n                transform: [{ scale }, { translateX }]\n              }}\n            >\n              <Text style={{ color: \"#FFF\", fontSize: 28, fontWeight: \"700\" }}>\n                Slide.\n              </Text>\n            </Handle>\n          </AnimatedGradient>\n        </Wrapper>\n      </PanGestureHandler>\n    </Container>\n  );\n};\n\nexport default GestureSlider;\n","export default [\n  {\n    label: 'Lorem',\n    gradient: ['#F6D365', '#FDA085'],\n  },\n  {\n    label: 'Ipsum',\n    gradient: ['#F093FB', '#F5576C'],\n  },\n  {\n    label: 'Dolor',\n    gradient: ['#5EE7DF', '#B490CA'],\n  },\n  {\n    label: 'Adisciping',\n    gradient: ['#C3CFE2', '#CB2FE2'],\n  },\n]","import React from \"react\";\nimport styled from \"styled-components/native\";\nimport { animated } from \"react-spring/native\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { PanGestureHandler, State } from \"react-native-gesture-handler\";\nimport { Text, View, Dimensions, TouchableWithoutFeedback } from \"react-native\";\n\nimport { percent, useMedia } from \"../../utils\";\n\nconst fortyPercent = percent(40);\nconst sixtyPercent = percent(60);\nconst eightyPercent = percent(80);\n\nconst AnimatedView = animated(View)\nconst Gradient = styled(LinearGradient)`\n  height: 90px;\n  padding: 10px;\n  overflow: hidden;\n  position: absolute;\n  border-radius: 5px;\n  justify-content: center;  \n`;\n\nconst ListItem = ({ label, onGesture, reset, colors, ...props }) => {\n  const screen = Dimensions.get(\"window\");\n  const width = useMedia(\n    [\"(min-width: 1500px)\", \"(min-width: 1000px)\", \"(min-width: 600px)\"],\n    [fortyPercent, sixtyPercent, eightyPercent].map(productOf =>\n      productOf(screen.width)\n    ),\n    eightyPercent(screen.width)\n  );\n\n  return (\n    <TouchableWithoutFeedback\n      onPressIn={() => onGesture?.(true, 0)}\n      onPressOut={() => onGesture?.(false, 0)}      \n    >\n      <AnimatedView {...props}>\n      <Gradient\n        start={[0, 0]}\n        colors={colors}\n        style={{ width, position: 'relative' }}\n        end={[-0.5, 0.866]}\n        locations={[0.1, 0.9]}        \n      >\n        <PanGestureHandler\n          onGestureEvent={({ nativeEvent: { translationY } }) => {\n            onGesture?.(true, translationY);\n          }}\n          onHandlerStateChange={({ nativeEvent: { state }}) => {\n            if (state !== State.ACTIVE) onGesture?.(false, 0)\n          }}\n        >\n          <Text style={{ color: \"#FFF\", fontSize: 20, fontWeight: \"700\" }}>\n            {label}\n          </Text>\n        </PanGestureHandler>\n      </Gradient>\n      </AnimatedView>\n    </TouchableWithoutFeedback>\n  );\n};\n\nexport default ListItem;\n","import swap from \"lodash-move\";\nimport { clamp } from \"lodash\";\nimport React, { useRef } from \"react\";\nimport { Dimensions, View } from \"react-native\";\nimport { useSprings } from \"react-spring/native\";\n\nimport items from \"./data\";\nimport ListItem from \"./ListItem\";\n\nconst func = (active, order, curIndex, originalIndex, translateY) => index =>\n  active && index === originalIndex\n    ? {\n        zIndex: 1,\n        shadow: 15,\n        scale: 1.2,\n        translateY: curIndex * 30 + translateY,\n        immediate: true\n      }\n    : {\n        scale: 1,\n        shadow: 1,\n        zIndex: 0,\n        immediate: false,\n        translateY: order.indexOf(index) * 30\n      };\n\nconst DraggableList = () => {\n  const { height, width } = Dimensions.get(\"window\");\n  const order = useRef(items.map((_, i) => i));\n  const [springs, set] = useSprings(items.length, func(false, order.current));\n  const moveItem = originalIndex => (active, translateY) => {\n    const curIndex = order.current.indexOf(originalIndex);\n    const curRow = clamp(\n      Math.round((curIndex * 100 + translateY) / 100),\n      0,\n      items.length - 1\n    );\n\n    const newOrder = swap(order.current, curIndex, curRow);\n\n    set(func(active, newOrder, curIndex, originalIndex, translateY));\n    order.current = newOrder;\n  };\n\n  return (\n    <View\n      style={{ height, width, justifyContent: \"center\", alignItems: \"center\" }}\n    >\n      {springs.map(({ translateY, scale, shadow, zIndex }, index) => {\n        const { gradient, label } = items[index];\n\n        return (\n          <ListItem\n            key={index}\n            label={label}\n            colors={gradient}\n            onGesture={moveItem(index)}\n            style={{              \n              zIndex,\n              transform: [{ translateY }, { scale }],\n            }}\n          />\n        );\n      })}\n    </View>\n  );\n};\n\nexport default DraggableList;\n","import { round } from 'lodash';\nimport React, { useState } from \"react\";\nimport { useSpring, animated, config } from \"react-spring/native\";\nimport { Dimensions, Text, View, TouchableOpacity } from \"react-native\";\n\nconst AnimatedText = animated(Text);\nconst AnimatedView = animated(View);\nconst AnimatingAuto = () => {\n  const [active, toggle] = useState(false);\n  const [currentWdith, setCurrentWidth] = useState(0)\n  const { height, width: windowWidth } = Dimensions.get(\"window\");\n  const { width } = useSpring({\n    config: config.slow,\n    from: { width: 0 },\n    to: { width: active ? windowWidth : 0 }\n  });\n\n  React.useEffect(() => {\n    width.interpolate(value => setCurrentWidth(round(value)))\n  }, [width])\n\n  return (\n    <AnimatedView\n      style={{\n        height,\n        width: windowWidth,\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      }}\n    >\n      <TouchableOpacity\n        style={{\n          height,\n          width: windowWidth,\n          position: \"absolute\"\n        }}\n        onPress={() => toggle(prevState => !prevState)}\n      >\n        <AnimatedView\n          style={{\n            width,\n            height,\n            left: 0,\n            position: \"absolute\",\n            backgroundColor: \"#ADD8E6\"\n          }}\n        />\n      </TouchableOpacity>\n      <AnimatedText style={{ fontSize: 64, color: \"#888\" }}>\n        {currentWdith}\n      </AnimatedText>\n    </AnimatedView>\n  );\n};\n\nexport default AnimatingAuto;\n","import { Dimensions } from 'react-native'\nimport styled from 'styled-components/native'\n\nconst eightyPercent = () => {\n  const { width } = Dimensions.get('window')\n\n  return width * 0.8\n}\n\nconst Box = styled.View`\n  margin: 10px auto;\n  height: 100px;\n  width: ${eightyPercent()}px;\n  background-color: #000;\n`\n\nexport default Box","import React from \"react\";\nimport { View, Dimensions } from \"react-native\";\nimport { useSpring, animated } from \"react-spring/native\";\n\nimport Box from \"../../components/Box\";\nimport Container from \"../../components/Container\";\nimport { useMedia, percent } from \"../../utils\";\n\nconst eightyPercent = percent(80);\nconst sixtyPercent = percent(60);\nconst fortyPercent = percent(40);\nconst AnimatedView = animated(View);\nconst calculateTranslation = index => interpolation =>\n  15 * Math.sin(interpolation + (index * 2 * Math.PI) / 1.6);\n\nconst ScriptedAnimation = () => {\n  const boxes = [1, 2, 3, 4];\n  const { width } = Dimensions.get('window')\n  const boxWidth = useMedia(\n    [\"(min-width: 1500px)\", \"(min-width: 1000px)\", \"(min-width: 600px)\"],\n    [fortyPercent, sixtyPercent, eightyPercent].map(productOf =>\n      productOf(width)\n    ),\n    eightyPercent(width)\n  );\n  const { radians } = useSpring({\n    to: async next => {\n      while (1) await next({ radians: 2 * Math.PI });\n    },\n    from: { radians: 0 },\n    config: { duration: 3500 },\n    reset: true\n  });\n\n  return (\n    <Container>\n      {boxes.map(index => (\n        <Box\n          as={AnimatedView}\n          key={`box-${index}`}\n          style={{\n            width: boxWidth,\n            transform: [\n              { translateX: radians.interpolate(calculateTranslation(index)) }\n            ]\n          }}\n        />\n      ))}\n    </Container>\n  );\n};\n\nexport default ScriptedAnimation;\n","import React from \"react\";\nimport styled from \"styled-components/native\";\nimport { AntDesign as Icon } from \"@expo/vector-icons\";\n\nimport { Link, useLocation } from \"../Router\";\n\nconst Wrapper = styled.TouchableWithoutFeedback`\n  background-color: #fff;\n  height: 50px;\n  width: 50px;\n  border-radius: 25px;\n  position: absolute;\n  justify-content: center;\n  align-items: center;\n  bottom: 20px;\n  left: 10px;\n  elevation: 1;\n  box-shadow: 0px 1px 1px #8888;\n`;\n\nconst Back = () => {\n  const location = useLocation();\n\n  return (\n    location.pathname !== \"/\" && (\n      <Link\n        to=\"/\"\n        replace\n        style={{\n          position: \"absolute\",\n          left: 10,\n          bottom: 20,\n          elevation: 1,\n          borderRadius: 25,\n          height: 50,\n          width: 50,\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          display: \"flex\",\n          backgroundColor: \"#FFF\",\n          shadowColor: \"#888\",\n          shadowRadius: 2,\n          shadowOpacity: 0.4,\n          shadowOffset: {\n            width: 0,\n            height: 1\n          }\n        }}\n      >\n        <Icon name=\"arrowleft\" color=\"#888\" size={25} />\n      </Link>\n    )\n  );\n};\n\nexport default Back;\n","import React from \"react\";\nimport { SafeAreaView } from \"react-native\";\n\nimport Home from \"../Screens/Home\";\nimport ScriptBox from \"../Screens/ScriptBox\";\nimport FlipImage from \"../Screens/FlipImage\";\nimport PullRelease from \"../Screens/PullRelease\";\nimport MasonryGrid from \"../Screens/MasonryGrid\";\nimport TouchParallax from \"../Screens/TouchParallax\";\nimport GestureSlider from \"../Screens/GestureSlider\";\nimport DraggableList from \"../Screens/DraggableList\";\nimport AnimatingAuto from \"../Screens/AnimatingAuto\";\nimport ScriptedAnimation from \"../Screens/ScriptedAnimation\";\n\nimport Back from \"../components/Back\";\nimport { Switch, Route, BackButton } from \"../components/Router\";\n\n\nconst App = () => (\n  <SafeAreaView\n    style={{\n      flex: 1\n    }}\n  >\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route exact path=\"/ScriptBox\" component={ScriptBox} />\n      <Route exact path=\"/FlipImage\" component={FlipImage} />\n      <Route exact path=\"/PullRelease\" component={PullRelease} />\n      <Route exact path=\"/MasonryGrid\" component={MasonryGrid} />\n      <Route exact path=\"/TouchParallax\" component={TouchParallax} />\n      <Route exact path=\"/GestureSlider\" component={GestureSlider} />\n      <Route exact path=\"/DraggableList\" component={DraggableList} />\n      <Route exact path=\"/ScriptedAnimation\" component={ScriptedAnimation} />\n    </Switch>\n    <Route component={Back} />\n    <BackButton />\n  </SafeAreaView>\n);\n\nexport default App;\n\nexport {\n  ScriptBox,\n  FlipImage,\n  PullRelease,\n  MasonryGrid,\n  TouchParallax,\n  GestureSlider,\n  DraggableList,\n  AnimatingAuto,\n  ScriptedAnimation\n};\n","import React from 'react'\n\nimport Main from './src/App'\nimport { Router } from './src/components/Router'\n\nconst App = () => (\n  <Router>\n    <Main />    \n  </Router>\n)\n\nexport default App\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}